\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k}{def} \PYG{n+nf}{distance\PYGZus{}squared}\PYG{p}{(}\PYG{n}{c1}\PYG{p}{,} \PYG{n}{c2}\PYG{p}{):}
	\PYG{k}{return} \PYG{p}{(}\PYG{n}{c1}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}x\PYGZsq{}}\PYG{p}{]} \PYG{o}{\PYGZhy{}} \PYG{n}{c2}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}x\PYGZsq{}}\PYG{p}{])}\PYG{o}{**}\PYG{l+m+mi}{2} \PYG{o}{+} \PYG{p}{(}\PYG{n}{c1}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}y\PYGZsq{}}\PYG{p}{]} \PYG{o}{\PYGZhy{}} \PYG{n}{c2}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}y\PYGZsq{}}\PYG{p}{])}\PYG{o}{**}\PYG{l+m+mi}{2}

\PYG{c+c1}{\PYGZsh{} cities is an array of city objects which have an id, x\PYGZhy{}coordinate, and y\PYGZhy{}coordinate properties.}
\PYG{k}{def} \PYG{n+nf}{get\PYGZus{}nearest\PYGZus{}neighbor}\PYG{p}{(}\PYG{n}{cities}\PYG{p}{,} \PYG{n}{city}\PYG{p}{):}
	\PYG{c+c1}{\PYGZsh{} Dictionary for selecting nearest neighbor}
	\PYG{n}{neighbors} \PYG{o}{=} \PYG{p}{\PYGZob{}\PYGZcb{}}

	\PYG{c+c1}{\PYGZsh{} Add all distances\PYGZus{}squared to neighboring cities to dictionary}
	\PYG{k}{for} \PYG{n}{neighbor} \PYG{o+ow}{in} \PYG{n}{cities}\PYG{p}{:}
		\PYG{n}{neighbors}\PYG{p}{[}\PYG{n}{distance\PYGZus{}squared}\PYG{p}{(}\PYG{n}{city}\PYG{p}{,} \PYG{n}{neighbor}\PYG{p}{)]} \PYG{o}{=} \PYG{n}{neighbor}

	\PYG{c+c1}{\PYGZsh{} Return neighbor with least distance}
	\PYG{n}{nearest\PYGZus{}neighbor} \PYG{o}{=} \PYG{n}{neighbors}\PYG{p}{[}\PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{neighbors}\PYG{p}{)]}
	\PYG{n}{distance} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n+nb}{round}\PYG{p}{(}\PYG{n}{sqrt}\PYG{p}{(}\PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{neighbors}\PYG{p}{))))}

	\PYG{k}{return} \PYG{n}{nearest\PYGZus{}neighbor}\PYG{p}{,} \PYG{n}{distance}

\PYG{k}{def} \PYG{n+nf}{TSP\PYGZus{}nearest\PYGZus{}neighbor}\PYG{p}{(}\PYG{n}{cities}\PYG{p}{):}
	\PYG{n}{tour} \PYG{o}{=} \PYG{p}{[]}
	\PYG{n}{min\PYGZus{}distance} \PYG{o}{=} \PYG{n}{infinity}

	\PYG{k}{for} \PYG{n}{city} \PYG{o+ow}{in} \PYG{n}{cities}\PYG{p}{:}
		\PYG{n}{total\PYGZus{}distance} \PYG{o}{=} \PYG{l+m+mi}{0}

		\PYG{c+c1}{\PYGZsh{} Start on arbitrary vertex.}
		\PYG{n}{visited} \PYG{o}{=} \PYG{p}{[}\PYG{n}{city}\PYG{p}{]}
		\PYG{n}{unvisited} \PYG{o}{=} \PYG{p}{[]}

		\PYG{c+c1}{\PYGZsh{} Add all cities to unvisited list except the starting city.}
		\PYG{k}{for} \PYG{n}{city} \PYG{o+ow}{in} \PYG{n}{cities}\PYG{p}{:}
			\PYG{k}{if} \PYG{n}{city} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{n}{city}\PYG{p}{:}
				\PYG{n}{unvisited}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{city}\PYG{p}{)}

		\PYG{c+c1}{\PYGZsh{} find an unvisited nearest neighbor, marked it visited, and add it\PYGZsq{}s distance.}
		\PYG{k}{while} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{unvisited}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
			\PYG{n}{nearest\PYGZus{}neighbor}\PYG{p}{,} \PYG{n}{neighbor\PYGZus{}distance} \PYG{o}{=} \PYG{n}{get\PYGZus{}nearest\PYGZus{}neighbor}\PYG{p}{(}\PYG{n}{unvisited}\PYG{p}{,} \PYG{n}{visited}\PYG{p}{[}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{])}
			\PYG{n}{visited}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{nearest\PYGZus{}neighbor}\PYG{p}{)}
			\PYG{n}{unvisited}\PYG{o}{.}\PYG{n}{remove}\PYG{p}{(}\PYG{n}{nearest\PYGZus{}neighbor}\PYG{p}{)}
			\PYG{n}{total\PYGZus{}distance} \PYG{o}{+=} \PYG{n}{neighbor\PYGZus{}distance}

		\PYG{c+c1}{\PYGZsh{} add the distance between the first and last city to complete the tour.}
		\PYG{n}{total\PYGZus{}distance} \PYG{o}{+=} \PYG{n+nb}{round}\PYG{p}{(}\PYG{n}{sqrt}\PYG{p}{(}\PYG{n}{distance\PYGZus{}squared}\PYG{p}{(}\PYG{n}{visited}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n}{visited}\PYG{p}{[}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{])))}

		\PYG{k}{if} \PYG{n}{total\PYGZus{}distance} \PYG{o}{\PYGZlt{}} \PYG{n}{min\PYGZus{}distance}\PYG{p}{:}
			\PYG{n}{tour} \PYG{o}{=} \PYG{n}{visited}
			\PYG{n}{min\PYGZus{}distance} \PYG{o}{=} \PYG{n}{total\PYGZus{}distance}

	\PYG{k}{return} \PYG{n}{tour}\PYG{p}{,} \PYG{n}{min\PYGZus{}distance}
\end{Verbatim}
